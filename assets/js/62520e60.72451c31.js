"use strict";(self.webpackChunkaiblock_dev=self.webpackChunkaiblock_dev||[]).push([[2333],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>y});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,y=u["".concat(s,".").concat(d)]||u[d]||g[d]||i;return t?r.createElement(y,o(o({ref:n},p),{},{components:t})):r.createElement(y,o({ref:n},p))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},87351:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(58168),a=(t(96540),t(15680));const i={sidebar_position:1,title:"Valence Plugins",sidebar_label:"Valence plugins",hide_title:!1,tags:["valence-core","valence plugins","getting started"]},o=void 0,l={unversionedId:"valence-core/use-plugins",id:"valence-core/use-plugins",title:"Valence Plugins",description:"\ud83c\udfce\ufe0f Use in Plug-ins",source:"@site/docs/valence-core/use-plugins.mdx",sourceDirName:"valence-core",slug:"/valence-core/use-plugins",permalink:"/docs/valence-core/use-plugins",draft:!1,tags:[{label:"valence-core",permalink:"/docs/tags/valence-core"},{label:"valence plugins",permalink:"/docs/tags/valence-plugins"},{label:"getting started",permalink:"/docs/tags/getting-started"}],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Valence Plugins",sidebar_label:"Valence plugins",hide_title:!1,tags:["valence-core","valence plugins","getting started"]},sidebar:"docsSidebar",previous:{title:"Usage",permalink:"/docs/valence-core/how-to-use"},next:{title:"API",permalink:"/docs/api-tutorials"}},s={},c=[{value:"\ud83c\udfce\ufe0f Use in Plug-ins",id:"\ufe0f-use-in-plug-ins",level:3}],p={toc:c},u="wrapper";function g(e){let{components:n,...t}=e;return(0,a.yg)(u,(0,r.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h3",{id:"\ufe0f-use-in-plug-ins"},"\ud83c\udfce\ufe0f Use in Plug-ins"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"valence_core")," library exposes a few common methods and functionalities that are useful if you're either using plug-ins or writing your own. This core functionality includes:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"api:")," The module here contains most of the ",(0,a.yg)("inlineCode",{parentName:"p"},"struct"),"s and ",(0,a.yg)("inlineCode",{parentName:"p"},"enum"),"s that are used to communicate between nodes and plug-ins. This includes the ",(0,a.yg)("inlineCode",{parentName:"p"},"JsonReply"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"ApiErrorResponse")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"APIResponseStatus")," structs, as well as functions for JSON serialisation and Warp API replies.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"db:")," The module here contains all the common code associated with data storage. This includes the ",(0,a.yg)("inlineCode",{parentName:"p"},"KvStoreConnection")," trait, which ensures consistent interfacing with data handlers across the Valence ecosystem")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"crypto:")," The module here ensures consistency in the handling of cryptography across the Valence ecosystem. If you want to do anything with cryptography in your plug-in, you should use the functions here."))),(0,a.yg)("p",{align:"left"},"(",(0,a.yg)("a",{href:"#top"},"back to top"),")"))}g.isMDXComponent=!0}}]);