"use strict";(self.webpackChunkaiblock_dev=self.webpackChunkaiblock_dev||[]).push([[9942],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>y});var i=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),u=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return i.createElement(s.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=u(t),g=r,y=d["".concat(s,".").concat(g)]||d[g]||p[g]||o;return t?i.createElement(y,l(l({ref:n},c),{},{components:t})):i.createElement(y,l({ref:n},c))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=g;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a[d]="string"==typeof e?e:r,l[1]=a;for(var u=2;u<o;u++)l[u]=t[u];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},92807:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var i=t(58168),r=(t(96540),t(15680));const o={title:"Installing a Node",description:"How to install a mining node",sidebar_label:"Installing a Node",sidebar_position:0,hide_title:!1,tags:["mining","installation"]},l=void 0,a={unversionedId:"mining/installing-a-node",id:"mining/installing-a-node",title:"Installing a Node",description:"How to install a mining node",source:"@site/docs/mining/installing-a-node.mdx",sourceDirName:"mining",slug:"/mining/installing-a-node",permalink:"/docs/mining/installing-a-node",draft:!1,tags:[{label:"mining",permalink:"/docs/tags/mining"},{label:"installation",permalink:"/docs/tags/installation"}],version:"current",sidebarPosition:0,frontMatter:{title:"Installing a Node",description:"How to install a mining node",sidebar_label:"Installing a Node",sidebar_position:0,hide_title:!1,tags:["mining","installation"]},sidebar:"docsSidebar",previous:{title:"Hardware Requirements",permalink:"/docs/mining/hardware-requirements"}},s={},u=[{value:"Build from Source",id:"build-from-source",level:2},{value:"Setup",id:"setup",level:3},{value:"Linux",id:"linux",level:3},{value:"Mining Node Build",id:"mining-node-build",level:3}],c={toc:u},d="wrapper";function p(e){let{components:n,...t}=e;return(0,r.yg)(d,(0,i.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Mining nodes in the AIBlock system can be installed in one of two ways:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Docker container"),(0,r.yg)("li",{parentName:"ol"},"Built from source")),(0,r.yg)("p",null,"The Docker container is still currently being built, so for now you'll need to build from source in order to start mining."),(0,r.yg)("h2",{id:"build-from-source"},"Build from Source"),(0,r.yg)("p",null,"To build a mining node from source, you can implement the following steps:"),(0,r.yg)("h3",{id:"setup"},"Setup"),(0,r.yg)("p",null,"The AIBlock Network runs on Rust, so installing this is the first step before dealing with any code. You can install ",(0,r.yg)("inlineCode",{parentName:"p"},"rustup"),", Rust's toolchain installer, by running the following:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"curl https://sh.rustup.rs -sSf | sh\n")),(0,r.yg)("p",null,"When asked how to proceed, simply selecting the option ",(0,r.yg)("inlineCode",{parentName:"p"},"1) Proceed with installation")," is generally the best. You can then run the following to update the ",(0,r.yg)("inlineCode",{parentName:"p"},"PATH")," variable and check whether everything installed correctly:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"source $HOME/.cargo/env\nrustc --version\n")),(0,r.yg)("p",null,"If the terminal responds with the ",(0,r.yg)("inlineCode",{parentName:"p"},"rustc")," version you're currently running then everything went well, and you're ready to go. "),(0,r.yg)("h3",{id:"linux"},"Linux"),(0,r.yg)("p",null,"Linux (Ubuntu 20.04.01 LTS) may require extra package installations depending on what you've developed before. The following package installs assume a completely new machine instance, and should cover everything you need to get going:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"sudo apt install build-essential\nsudo apt-get install m4\nsudo apt-get install llvm\nsudo apt-get install libclang-dev\n")),(0,r.yg)("p",null,"The above should enable you to install ",(0,r.yg)("inlineCode",{parentName:"p"},"librocksdb-sys")," successfully, but older versions of this crate had bugs so it would be wise to ensure you've installed ",(0,r.yg)("inlineCode",{parentName:"p"},'rocksdb = "0.21.0"')," or higher in order to avoid compilation issues. "),(0,r.yg)("h3",{id:"mining-node-build"},"Mining Node Build"),(0,r.yg)("p",null,"With the prerequisites set up, you can now clone the repo to your local machine:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"git clone git@github.com:AIBlockOfficial/Network.git\n")),(0,r.yg)("p",null,"You can then build everything by running"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-rust"},"cargo build --release\n")),(0,r.yg)("p",null,"This will compile everything into a release state, from which you can then run the following to connect to the Playground testnet to mine:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"RUST_LOG=warp target/release/node miner --config=src/bin/node_settings_playground.toml --api_use_tls=0 --with_user_index=0`\n")))}p.isMDXComponent=!0}}]);