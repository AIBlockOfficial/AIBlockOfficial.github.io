"use strict";(self.webpackChunkaiblock_dev=self.webpackChunkaiblock_dev||[]).push([[7077],{99475:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>y,contentTitle:()=>b,default:()=>_,frontMatter:()=>p,metadata:()=>u,toc:()=>h});var n=a(58168),s=(a(96540),a(15680)),o=a(54754),i=a(34366),r=a(13185),l=a(26612),c=a(30774),d=a(47335),m=(a(38454),a(19365));const p={id:"block-by-num",title:"block_by_num",description:"Fetches block/s from the chain by block number. Multiple block numbers can be supplied in the same request body.",sidebar_label:"block_by_num",hide_title:!0,hide_table_of_contents:!0,api:{tags:["block"],description:"Fetches block/s from the chain by block number. Multiple block numbers can be supplied in the same request body.",operationId:"blockByNum",parameters:[{in:"header",name:"x-cache-id",required:!0,description:"An idempotent key for retrieving cached responses from the node",schema:{type:"string",example:"a1d46199e5c89b00509e118f5af83172",pattern:"^[a-z0-9]{32}$"}}],requestBody:{description:"List of block numbers to fetch blocks for in the chain",content:{"application/json":{schema:{type:"array",example:[0,10,2e4],items:{type:"number"}}}},required:!0},responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:"45v340cd2f8c4782a5b058832565afb1",description:"The ID of the call, which corresponds to the x-cache-id used in the header"},status:{type:"string",example:"Success",description:'The status of the call, which will be one of either "Success", "Error", or "Pending"'},reason:{type:"string",example:"Database item(s) successfully retrieved",description:"The reason for the status of the call. Most useful to debug errors"},route:{type:"string",example:"block_by_num",description:"The endpoint route that was called"},content:{type:"array",items:{type:"array",items:{type:"object",example:{id:"8bdc6c43fa004725bbd5eabef41e9d5d",status:"Success",reason:"Database item(s) successfully retrieved",route:"block_by_num",content:[["b00b7bb7ee1b41c857db05c86f8cf0f5548734d57dcb930605744d24425ea975d",{block:{header:{version:6,bits:0,nonce_and_mining_tx_hash:[[54,94,67,154,"..."],"g4c25d5bf7f3bff93b5cf34bb1dbf4a7"],b_num:0,timestamp:0,seed_value:[57,52,57,57,"..."],previous_hash:null,txs_merkle_root_and_hash:["6187c89a825c908668d7ade3d900fa38468be1d0dd5995adc690e6            1c9f3c4717","fd72629f4bb412913474be46095d1b65cac336b67be8db0959460c            4a41016ff6"]},transactions:["000000","000001","000010","000011"]}}]]}}}}},title:"ResponseBlockByNum"}}}},400:{description:"Invalid input",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:null},status:{type:"string",example:"Error"},reason:{type:"string",example:"Bad Request"},route:{type:"string",example:null},content:{type:"string",example:null}},title:"ResponseBadRequest"}}}}},method:"post",path:"/block_by_num",servers:[{url:"http://37.27.23.104:3001",description:"Testnet Storage Node"}],jsonRequestBodyExample:[0,10,2e4],info:{title:"Storage API",description:"\u26a0\ufe0f **Some sections may still be incomplete. We higly recommend getting started by downloading our [Postman collection](/docs/postman-collections)**.\n\nThe Storage node is responsible for storing the full blockchain history. \nOnce blocks are mined by the miners and sent to the Mempool nodes for validation, they are pushed on to the Storage nodes for long-term storage. \nAnybody is allowed to request a full history of the blockchain from the Storage nodes, but they are not required to keep such a history to participate in the network.",contact:{email:"byron.houwens@a-block.ch"},license:{name:"GPL-3.0",url:"https://www.gnu.org/licenses/gpl-3.0.en.html"},version:"1.0.1"},postman:{name:"block_by_num",description:{content:"Fetches block/s from the chain by block number. Multiple block numbers can be supplied in the same request body.",type:"text/plain"},url:{path:["block_by_num"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{disabled:!1,description:{content:"(Required) An idempotent key for retrieving cached responses from the node",type:"text/plain"},key:"x-cache-id",value:""},{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs/api/storage/storage-api",custom_edit_url:null,hide_send_button:!0},b=void 0,u={unversionedId:"api/storage/block-by-num",id:"api/storage/block-by-num",title:"block_by_num",description:"Fetches block/s from the chain by block number. Multiple block numbers can be supplied in the same request body.",source:"@site/docs/api/storage/block-by-num.api.mdx",sourceDirName:"api/storage",slug:"/api/storage/block-by-num",permalink:"/docs/api/storage/block-by-num",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"block-by-num",title:"block_by_num",description:"Fetches block/s from the chain by block number. Multiple block numbers can be supplied in the same request body.",sidebar_label:"block_by_num",hide_title:!0,hide_table_of_contents:!0,api:{tags:["block"],description:"Fetches block/s from the chain by block number. Multiple block numbers can be supplied in the same request body.",operationId:"blockByNum",parameters:[{in:"header",name:"x-cache-id",required:!0,description:"An idempotent key for retrieving cached responses from the node",schema:{type:"string",example:"a1d46199e5c89b00509e118f5af83172",pattern:"^[a-z0-9]{32}$"}}],requestBody:{description:"List of block numbers to fetch blocks for in the chain",content:{"application/json":{schema:{type:"array",example:[0,10,2e4],items:{type:"number"}}}},required:!0},responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:"45v340cd2f8c4782a5b058832565afb1",description:"The ID of the call, which corresponds to the x-cache-id used in the header"},status:{type:"string",example:"Success",description:'The status of the call, which will be one of either "Success", "Error", or "Pending"'},reason:{type:"string",example:"Database item(s) successfully retrieved",description:"The reason for the status of the call. Most useful to debug errors"},route:{type:"string",example:"block_by_num",description:"The endpoint route that was called"},content:{type:"array",items:{type:"array",items:{type:"object",example:{id:"8bdc6c43fa004725bbd5eabef41e9d5d",status:"Success",reason:"Database item(s) successfully retrieved",route:"block_by_num",content:[["b00b7bb7ee1b41c857db05c86f8cf0f5548734d57dcb930605744d24425ea975d",{block:{header:{version:6,bits:0,nonce_and_mining_tx_hash:[[54,94,67,154,"..."],"g4c25d5bf7f3bff93b5cf34bb1dbf4a7"],b_num:0,timestamp:0,seed_value:[57,52,57,57,"..."],previous_hash:null,txs_merkle_root_and_hash:["6187c89a825c908668d7ade3d900fa38468be1d0dd5995adc690e6            1c9f3c4717","fd72629f4bb412913474be46095d1b65cac336b67be8db0959460c            4a41016ff6"]},transactions:["000000","000001","000010","000011"]}}]]}}}}},title:"ResponseBlockByNum"}}}},400:{description:"Invalid input",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:null},status:{type:"string",example:"Error"},reason:{type:"string",example:"Bad Request"},route:{type:"string",example:null},content:{type:"string",example:null}},title:"ResponseBadRequest"}}}}},method:"post",path:"/block_by_num",servers:[{url:"http://37.27.23.104:3001",description:"Testnet Storage Node"}],jsonRequestBodyExample:[0,10,2e4],info:{title:"Storage API",description:"\u26a0\ufe0f **Some sections may still be incomplete. We higly recommend getting started by downloading our [Postman collection](/docs/postman-collections)**.\n\nThe Storage node is responsible for storing the full blockchain history. \nOnce blocks are mined by the miners and sent to the Mempool nodes for validation, they are pushed on to the Storage nodes for long-term storage. \nAnybody is allowed to request a full history of the blockchain from the Storage nodes, but they are not required to keep such a history to participate in the network.",contact:{email:"byron.houwens@a-block.ch"},license:{name:"GPL-3.0",url:"https://www.gnu.org/licenses/gpl-3.0.en.html"},version:"1.0.1"},postman:{name:"block_by_num",description:{content:"Fetches block/s from the chain by block number. Multiple block numbers can be supplied in the same request body.",type:"text/plain"},url:{path:["block_by_num"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{disabled:!1,description:{content:"(Required) An idempotent key for retrieving cached responses from the node",type:"text/plain"},key:"x-cache-id",value:""},{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs/api/storage/storage-api",custom_edit_url:null,hide_send_button:!0},sidebar:"apiSidebar",previous:{title:"latest_block",permalink:"/docs/api/storage/latest-block"},next:{title:"blockchain_entry",permalink:"/docs/api/storage/blockchain-entry"}},y={},h=[{value:"block_by_num",id:"block_by_num",level:2}],g={toc:h},f="wrapper";function _(e){let{components:t,...a}=e;return(0,s.yg)(f,(0,n.A)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("h2",{id:"block_by_num"},"block_by_num"),(0,s.yg)("p",null,"Fetches block/s from the chain by block number. Multiple block numbers can be supplied in the same request body."),(0,s.yg)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,s.yg)("summary",{style:{}},(0,s.yg)("strong",null,"Header Parameters")),(0,s.yg)("div",null,(0,s.yg)("ul",null,(0,s.yg)(r.A,{className:"paramsItem",param:{in:"header",name:"x-cache-id",required:!0,description:"An idempotent key for retrieving cached responses from the node",schema:{type:"string",example:"a1d46199e5c89b00509e118f5af83172",pattern:"^[a-z0-9]{32}$"}},mdxType:"ParamsItem"})))),(0,s.yg)(i.A,{mdxType:"MimeTabs"},(0,s.yg)(m.A,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,s.yg)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.yg)("summary",{style:{textAlign:"left"}},(0,s.yg)("strong",null,"Request Body"),(0,s.yg)("span",{style:{opacity:"0.6"}}," array"),(0,s.yg)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,s.yg)("div",{style:{textAlign:"left",marginLeft:"1rem"}},(0,s.yg)("div",{style:{marginTop:"1rem",marginBottom:"1rem"}},(0,s.yg)("p",null,"List of block numbers to fetch blocks for in the chain"))),(0,s.yg)("ul",{style:{marginLeft:"1rem"}},(0,s.yg)("li",null,(0,s.yg)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.yg)("div",{style:{marginTop:".5rem",marginBottom:".5rem",marginLeft:"1rem"}},(0,s.yg)("p",null,"number")),(0,s.yg)("li",null,(0,s.yg)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))),(0,s.yg)("div",null,(0,s.yg)(o.A,{mdxType:"ApiTabs"},(0,s.yg)(m.A,{label:"200",value:"200",mdxType:"TabItem"},(0,s.yg)("div",null,(0,s.yg)("p",null,"Successful operation")),(0,s.yg)("div",null,(0,s.yg)(i.A,{schemaType:"response",mdxType:"MimeTabs"},(0,s.yg)(m.A,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.yg)(d.A,{mdxType:"SchemaTabs"},(0,s.yg)(m.A,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.yg)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.yg)("summary",{style:{textAlign:"left"}},(0,s.yg)("strong",null,"Schema")),(0,s.yg)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.yg)("ul",{style:{marginLeft:"1rem"}},(0,s.yg)(c.A,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"45v340cd2f8c4782a5b058832565afb1",description:"The ID of the call, which corresponds to the x-cache-id used in the header"},mdxType:"SchemaItem"}),(0,s.yg)(c.A,{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Success",description:'The status of the call, which will be one of either "Success", "Error", or "Pending"'},mdxType:"SchemaItem"}),(0,s.yg)(c.A,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Database item(s) successfully retrieved",description:"The reason for the status of the call. Most useful to debug errors"},mdxType:"SchemaItem"}),(0,s.yg)(c.A,{collapsible:!1,name:"route",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"block_by_num",description:"The endpoint route that was called"},mdxType:"SchemaItem"}),(0,s.yg)(c.A,{collapsible:!1,name:"content",required:!1,schemaName:"array[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"array",items:{type:"object",example:{id:"8bdc6c43fa004725bbd5eabef41e9d5d",status:"Success",reason:"Database item(s) successfully retrieved",route:"block_by_num",content:[["b00b7bb7ee1b41c857db05c86f8cf0f5548734d57dcb930605744d24425ea975d",{block:{header:{version:6,bits:0,nonce_and_mining_tx_hash:[[54,94,67,154,"..."],"g4c25d5bf7f3bff93b5cf34bb1dbf4a7"],b_num:0,timestamp:0,seed_value:[57,52,57,57,"..."],previous_hash:null,txs_merkle_root_and_hash:["6187c89a825c908668d7ade3d900fa38468be1d0dd5995adc690e6            1c9f3c4717","fd72629f4bb412913474be46095d1b65cac336b67be8db0959460c            4a41016ff6"]},transactions:["000000","000001","000010","000011"]}}]]}}}},mdxType:"SchemaItem"})))),(0,s.yg)(m.A,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.yg)(l.A,{responseExample:'{\n  "id": "45v340cd2f8c4782a5b058832565afb1",\n  "status": "Success",\n  "reason": "Database item(s) successfully retrieved",\n  "route": "block_by_num",\n  "content": [\n    [\n      {\n        "id": "8bdc6c43fa004725bbd5eabef41e9d5d",\n        "status": "Success",\n        "reason": "Database item(s) successfully retrieved",\n        "route": "block_by_num",\n        "content": [\n          [\n            "b00b7bb7ee1b41c857db05c86f8cf0f5548734d57dcb930605744d24425ea975d",\n            {\n              "block": {\n                "header": {\n                  "version": 6,\n                  "bits": 0,\n                  "nonce_and_mining_tx_hash": [\n                    [\n                      54,\n                      94,\n                      67,\n                      154,\n                      "..."\n                    ],\n                    "g4c25d5bf7f3bff93b5cf34bb1dbf4a7"\n                  ],\n                  "b_num": 0,\n                  "timestamp": 0,\n                  "seed_value": [\n                    57,\n                    52,\n                    57,\n                    57,\n                    "..."\n                  ],\n                  "previous_hash": null,\n                  "txs_merkle_root_and_hash": [\n                    "6187c89a825c908668d7ade3d900fa38468be1d0dd5995adc690e6            1c9f3c4717",\n                    "fd72629f4bb412913474be46095d1b65cac336b67be8db0959460c            4a41016ff6"\n                  ]\n                },\n                "transactions": [\n                  "000000",\n                  "000001",\n                  "000010",\n                  "000011"\n                ]\n              }\n            }\n          ]\n        ]\n      }\n    ]\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.yg)(m.A,{label:"400",value:"400",mdxType:"TabItem"},(0,s.yg)("div",null,(0,s.yg)("p",null,"Invalid input")),(0,s.yg)("div",null,(0,s.yg)(i.A,{schemaType:"response",mdxType:"MimeTabs"},(0,s.yg)(m.A,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.yg)(d.A,{mdxType:"SchemaTabs"},(0,s.yg)(m.A,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.yg)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.yg)("summary",{style:{textAlign:"left"}},(0,s.yg)("strong",null,"Schema")),(0,s.yg)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.yg)("ul",{style:{marginLeft:"1rem"}},(0,s.yg)(c.A,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:null},mdxType:"SchemaItem"}),(0,s.yg)(c.A,{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Error"},mdxType:"SchemaItem"}),(0,s.yg)(c.A,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Bad Request"},mdxType:"SchemaItem"}),(0,s.yg)(c.A,{collapsible:!1,name:"route",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:null},mdxType:"SchemaItem"}),(0,s.yg)(c.A,{collapsible:!1,name:"content",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:null},mdxType:"SchemaItem"})))),(0,s.yg)(m.A,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.yg)(l.A,{responseExample:'{\n  "id": null,\n  "status": "Error",\n  "reason": "Bad Request",\n  "route": null,\n  "content": null\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}_.isMDXComponent=!0}}]);