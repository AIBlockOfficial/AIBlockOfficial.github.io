"use strict";(self.webpackChunkaiblock_dev=self.webpackChunkaiblock_dev||[]).push([[2827],{15680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>g});var o=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(t),u=i,g=p["".concat(l,".").concat(u)]||p[u]||m[u]||r;return t?o.createElement(g,a(a({ref:n},d),{},{components:t})):o.createElement(g,a({ref:n},d))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,a=new Array(r);a[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:i,a[1]=s;for(var c=2;c<r;c++)a[c]=t[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},24266:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=t(58168),i=(t(96540),t(15680));const r={title:"AIBlock Miner Node",description:"Learn about AIBlock's Miner node type",sidebar_label:"Miner Node",sidebar_position:2,hide_title:!0,tags:["deep dive documentation","aiblock network"]},a="Miner Node",s={unversionedId:"network-wiki/miner-node",id:"network-wiki/miner-node",title:"AIBlock Miner Node",description:"Learn about AIBlock's Miner node type",source:"@site/docs/network-wiki/miner-node.mdx",sourceDirName:"network-wiki",slug:"/network-wiki/miner-node",permalink:"/docs/network-wiki/miner-node",draft:!1,tags:[{label:"deep dive documentation",permalink:"/docs/tags/deep-dive-documentation"},{label:"aiblock network",permalink:"/docs/tags/aiblock-network"}],version:"current",sidebarPosition:2,frontMatter:{title:"AIBlock Miner Node",description:"Learn about AIBlock's Miner node type",sidebar_label:"Miner Node",sidebar_position:2,hide_title:!0,tags:["deep dive documentation","aiblock network"]},sidebar:"docsSidebar",previous:{title:"Mempool Node",permalink:"/docs/network-wiki/mempool-node"},next:{title:"Storage Node",permalink:"/docs/network-wiki/storage-node"}},l={},c=[{value:"Balance of Power",id:"balance-of-power",level:2},{value:"Partitioning",id:"partitioning",level:2}],d={toc:c},p="wrapper";function m(e){let{components:n,...r}=e;return(0,i.yg)(p,(0,o.A)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"miner-node"},"Miner Node"),(0,i.yg)("p",null,"The Miner node embodies the average miner in the AIBlock system, responsible for mining blocks of transactions and adding them to the blockchain history. Winning miners receive token rewards, and AIBlock employs a more energy-efficient mining method while retaining the useful aspects of ",(0,i.yg)("a",{parentName:"p",href:"https://en.bitcoin.it/wiki/Proof_of_work"},"Proof-of-Work (PoW)"),". Further details on this method are discussed in the ",(0,i.yg)("a",{parentName:"p",href:"#partitioning"},"Partitioning")," section."),(0,i.yg)("h2",{id:"balance-of-power"},"Balance of Power"),(0,i.yg)("p",null,"A Roman-style balance exists between the Senate-like Mempool nodes and the Public-like Miner nodes, ensuring the trustlessness of the AIBlock system. While Mempool nodes validate and bundle transactions, Miner nodes play a crucial role in mining and adding blocks to Storage nodes. If the majority of Miners reject a Mempool-constructed block, it cannot be added to the ledger. Miners can even choose to reject a dishonest Mempool node, rendering it useless, or in extreme cases, abandon the system altogether."),(0,i.yg)("p",null,"Fairness in block mining and Miner participation is ensured through the partitioning system, discussed in the next section."),(0,i.yg)("h2",{id:"partitioning"},"Partitioning"),(0,i.yg)("p",null,"The partitioning system forms the foundation of the Mempool-Miner balance. Instead of all miners mining each round, a select few are chosen, conserving energy. Miners not chosen can attempt to participate in the next round. The network structure each round is illustrated in the diagram, where only miner nodes inside the orange space can mine for a specific Mempool node:"),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"miner",src:t(99638).A,width:"2813",height:"1664"})),(0,i.yg)("p",null,"Each round, Miners can request to join a Mempool node's upcoming block mining. Each Mempool node has a limited number of miners in its partition. Once the partition limit is reached, the block can be sent for mining."),(0,i.yg)("p",null,"Mempool nodes, upon receiving a Miner's partition request, follow these steps:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Miner A requests to join Mempool A's partition, containing a small Proof-of-Work to prevent exploitation."),(0,i.yg)("li",{parentName:"ul"},"Mempool A uses the ",(0,i.yg)("a",{parentName:"li",href:"unicorns"},"UNiCORN")," algorithm to select miners from the partition for the mining process."),(0,i.yg)("li",{parentName:"ul"},"Mempool A provides the block to selected miners, including Miner A, who can start mining."),(0,i.yg)("li",{parentName:"ul"},"Miners have a deterministic time to submit their winning Proof-of-Work."),(0,i.yg)("li",{parentName:"ul"},"At the round's end, Mempool nodes use UNiCORN to select the winning Miner, and the block is sent with their coinbase to Storage nodes.")))}m.isMDXComponent=!0},99638:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/miner-a9a37485fb1c3ca7d406e4d102b9bbfe.svg"}}]);