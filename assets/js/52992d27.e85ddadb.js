"use strict";(self.webpackChunkaiblock_dev=self.webpackChunkaiblock_dev||[]).push([[2055],{97612:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>y,default:()=>x,frontMatter:()=>d,metadata:()=>u,toc:()=>g});var s=a(58168),i=(a(96540),a(15680)),n=a(54754),o=a(34366),r=a(13185),c=a(26612),l=a(30774),m=a(47335),p=(a(38454),a(19365));const d={id:"create-tx",title:"create_transactions",description:"Create new transaction/s, which will be submitted to the Mempool nodes for inclusion into a new block. This call assumes a full transaction as part of the request body, which might make raw calls difficult to manage. For convenience, it may be best to use an AIBlock library or SDK that abstracts this call for you.",sidebar_label:"create_transactions",hide_title:!0,hide_table_of_contents:!0,api:{tags:["transaction"],description:"Create new transaction/s, which will be submitted to the Mempool nodes for inclusion into a new block. This call assumes a full transaction as part of the request body, which might make raw calls difficult to manage. For convenience, it may be best to use an AIBlock library or SDK that abstracts this call for you.",operationId:"createTx",parameters:[{in:"header",name:"x-cache-id",required:!0,description:"An idempotent key for retrieving cached responses from the node",schema:{type:"string",example:"4d1e5754af0931a15138445c3ecd1a82",pattern:"^[a-z0-9]{32}$"}}],requestBody:{description:"Create a new transaction",content:{"application/json":{schema:{type:"object",xml:{name:"txcreate"},properties:{inputs:{type:"array",items:{type:"object",xml:{name:"txinput"},properties:{previous_out:{description:"Previous output tx hash",type:"object",properties:{t_hash:{type:"string",example:"f0698b112da09",description:"Transaction hash"},n:{type:"number",example:1,description:"."}},title:"previousOut"},script_signature:{type:"object",properties:{signable_data:{type:"string",example:"1b061ff7e94765f95a2a5122d3bde757f2daaacef762c5aef2bf237ca3da2abf"},signature:{type:"string",example:"b576d3f5c1703206bad8b9de0ce3a3167e203b78164c86d78774534c930a535a31c49adae9e70569008c0329fb4a9128ca96d350f47a88ce06ef5a334506f803"},public_key:{type:"string",example:"5e7856117f404562c47dbdccfb8c23dc9ec69be14df5712bb459eeb440f40808"},address_version:{type:"string",example:"null"}},title:"Pay2PkH"}},title:"TransactionInput"},description:"The inputs to the transaction"},outputs:{type:"array",items:{type:"object",xml:{name:"txinput"},properties:{value:{type:"object",properties:{Token:{type:"number",example:10,description:"Token amount"}}},locktime:{type:"number",example:0},drs_block_hash:{type:"string",example:"null",description:"block hash DRS identifier"},script_public_key:{type:"string",example:"ec66c99201a7a8299e5acace235b03932c7990cc479eca35ee1dd692a5d3c030"}},title:"TransactionOutput"},description:"The outputs to the transaction"},version:{type:"integer",format:"int8",example:2,description:"The transaction's schema version"},druid_info:{type:"object",properties:{druid:{type:"string",example:"DRUID_1"},participants:{type:"integer",example:2},expectations:{type:"object",properties:{from:{type:"string"},to:{type:"string"},asset:{type:"object"}}}}}},title:"TransactionCreate"}}},required:!0},responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:"a1d46199e5c89b00509e118f5af83172",description:"The ID of the call, which corresponds to the x-cache-id used in the header"},status:{type:"string",example:"Success",description:'The status of the call, which will be one of either "Success", "Error", or "Pending"'},reason:{type:"string",example:"Transaction/s successfully created",description:"The reason for the status of the call. Most useful to debug errors"},route:{type:"string",example:"create_transactions",description:"The endpoint route that was called"},content:{type:"object",properties:{transaction:{type:"object",example:"This section is unfinished, refer to postman collection for more details",description:"This section is unfinished, refer to postman collection for more details"}}}},title:"ResponseCreateTransactions"}}}},400:{description:"Invalid input",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:null},status:{type:"string",example:"Error"},reason:{type:"string",example:"Bad Request"},route:{type:"string",example:null},content:{type:"string",example:null}},title:"ResponseBadRequest"}}}}},method:"post",path:"/create_transactions",servers:[{url:"http://37.27.23.104:3003",description:"Testnet Mempool Node"}],jsonRequestBodyExample:{inputs:[{previous_out:{t_hash:"f0698b112da09",n:1},script_signature:{signable_data:"1b061ff7e94765f95a2a5122d3bde757f2daaacef762c5aef2bf237ca3da2abf",signature:"b576d3f5c1703206bad8b9de0ce3a3167e203b78164c86d78774534c930a535a31c49adae9e70569008c0329fb4a9128ca96d350f47a88ce06ef5a334506f803",public_key:"5e7856117f404562c47dbdccfb8c23dc9ec69be14df5712bb459eeb440f40808",address_version:"null"}}],outputs:[{value:{Token:10},locktime:0,drs_block_hash:"null",script_public_key:"ec66c99201a7a8299e5acace235b03932c7990cc479eca35ee1dd692a5d3c030"}],version:2,druid_info:{druid:"DRUID_1",participants:2,expectations:{from:"string",to:"string",asset:{}}}},info:{title:"Mempool API",description:"\u26a0\ufe0f **Some sections may still be incomplete. We higly recommend getting started by downloading our [Postman collection](/docs/postman-collections)**.\n\nThe Mempool node is a special type of node responsible for collecting transactions and bundling them into new blocks. \nThey also partition the mining network for mining and validate the blocks that these partitions mine. \nThere are only a limited number of Mempool nodes.  ",contact:{email:"byron.houwens@a-block.ch"},license:{name:"GPL-3.0",url:"https://www.gnu.org/licenses/gpl-3.0.en.html"},version:"1.0.1"},postman:{name:"create_transactions",description:{content:"Create new transaction/s, which will be submitted to the Mempool nodes for inclusion into a new block. This call assumes a full transaction as part of the request body, which might make raw calls difficult to manage. For convenience, it may be best to use an AIBlock library or SDK that abstracts this call for you.",type:"text/plain"},url:{path:["create_transactions"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{disabled:!1,description:{content:"(Required) An idempotent key for retrieving cached responses from the node",type:"text/plain"},key:"x-cache-id",value:""},{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs/api/mempool/mempool-api",custom_edit_url:null,hide_send_button:!0},y=void 0,u={unversionedId:"api/mempool/create-tx",id:"api/mempool/create-tx",title:"create_transactions",description:"Create new transaction/s, which will be submitted to the Mempool nodes for inclusion into a new block. This call assumes a full transaction as part of the request body, which might make raw calls difficult to manage. For convenience, it may be best to use an AIBlock library or SDK that abstracts this call for you.",source:"@site/docs/api/mempool/create-tx.api.mdx",sourceDirName:"api/mempool",slug:"/api/mempool/create-tx",permalink:"/docs/api/mempool/create-tx",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"create-tx",title:"create_transactions",description:"Create new transaction/s, which will be submitted to the Mempool nodes for inclusion into a new block. This call assumes a full transaction as part of the request body, which might make raw calls difficult to manage. For convenience, it may be best to use an AIBlock library or SDK that abstracts this call for you.",sidebar_label:"create_transactions",hide_title:!0,hide_table_of_contents:!0,api:{tags:["transaction"],description:"Create new transaction/s, which will be submitted to the Mempool nodes for inclusion into a new block. This call assumes a full transaction as part of the request body, which might make raw calls difficult to manage. For convenience, it may be best to use an AIBlock library or SDK that abstracts this call for you.",operationId:"createTx",parameters:[{in:"header",name:"x-cache-id",required:!0,description:"An idempotent key for retrieving cached responses from the node",schema:{type:"string",example:"4d1e5754af0931a15138445c3ecd1a82",pattern:"^[a-z0-9]{32}$"}}],requestBody:{description:"Create a new transaction",content:{"application/json":{schema:{type:"object",xml:{name:"txcreate"},properties:{inputs:{type:"array",items:{type:"object",xml:{name:"txinput"},properties:{previous_out:{description:"Previous output tx hash",type:"object",properties:{t_hash:{type:"string",example:"f0698b112da09",description:"Transaction hash"},n:{type:"number",example:1,description:"."}},title:"previousOut"},script_signature:{type:"object",properties:{signable_data:{type:"string",example:"1b061ff7e94765f95a2a5122d3bde757f2daaacef762c5aef2bf237ca3da2abf"},signature:{type:"string",example:"b576d3f5c1703206bad8b9de0ce3a3167e203b78164c86d78774534c930a535a31c49adae9e70569008c0329fb4a9128ca96d350f47a88ce06ef5a334506f803"},public_key:{type:"string",example:"5e7856117f404562c47dbdccfb8c23dc9ec69be14df5712bb459eeb440f40808"},address_version:{type:"string",example:"null"}},title:"Pay2PkH"}},title:"TransactionInput"},description:"The inputs to the transaction"},outputs:{type:"array",items:{type:"object",xml:{name:"txinput"},properties:{value:{type:"object",properties:{Token:{type:"number",example:10,description:"Token amount"}}},locktime:{type:"number",example:0},drs_block_hash:{type:"string",example:"null",description:"block hash DRS identifier"},script_public_key:{type:"string",example:"ec66c99201a7a8299e5acace235b03932c7990cc479eca35ee1dd692a5d3c030"}},title:"TransactionOutput"},description:"The outputs to the transaction"},version:{type:"integer",format:"int8",example:2,description:"The transaction's schema version"},druid_info:{type:"object",properties:{druid:{type:"string",example:"DRUID_1"},participants:{type:"integer",example:2},expectations:{type:"object",properties:{from:{type:"string"},to:{type:"string"},asset:{type:"object"}}}}}},title:"TransactionCreate"}}},required:!0},responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:"a1d46199e5c89b00509e118f5af83172",description:"The ID of the call, which corresponds to the x-cache-id used in the header"},status:{type:"string",example:"Success",description:'The status of the call, which will be one of either "Success", "Error", or "Pending"'},reason:{type:"string",example:"Transaction/s successfully created",description:"The reason for the status of the call. Most useful to debug errors"},route:{type:"string",example:"create_transactions",description:"The endpoint route that was called"},content:{type:"object",properties:{transaction:{type:"object",example:"This section is unfinished, refer to postman collection for more details",description:"This section is unfinished, refer to postman collection for more details"}}}},title:"ResponseCreateTransactions"}}}},400:{description:"Invalid input",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:null},status:{type:"string",example:"Error"},reason:{type:"string",example:"Bad Request"},route:{type:"string",example:null},content:{type:"string",example:null}},title:"ResponseBadRequest"}}}}},method:"post",path:"/create_transactions",servers:[{url:"http://37.27.23.104:3003",description:"Testnet Mempool Node"}],jsonRequestBodyExample:{inputs:[{previous_out:{t_hash:"f0698b112da09",n:1},script_signature:{signable_data:"1b061ff7e94765f95a2a5122d3bde757f2daaacef762c5aef2bf237ca3da2abf",signature:"b576d3f5c1703206bad8b9de0ce3a3167e203b78164c86d78774534c930a535a31c49adae9e70569008c0329fb4a9128ca96d350f47a88ce06ef5a334506f803",public_key:"5e7856117f404562c47dbdccfb8c23dc9ec69be14df5712bb459eeb440f40808",address_version:"null"}}],outputs:[{value:{Token:10},locktime:0,drs_block_hash:"null",script_public_key:"ec66c99201a7a8299e5acace235b03932c7990cc479eca35ee1dd692a5d3c030"}],version:2,druid_info:{druid:"DRUID_1",participants:2,expectations:{from:"string",to:"string",asset:{}}}},info:{title:"Mempool API",description:"\u26a0\ufe0f **Some sections may still be incomplete. We higly recommend getting started by downloading our [Postman collection](/docs/postman-collections)**.\n\nThe Mempool node is a special type of node responsible for collecting transactions and bundling them into new blocks. \nThey also partition the mining network for mining and validate the blocks that these partitions mine. \nThere are only a limited number of Mempool nodes.  ",contact:{email:"byron.houwens@a-block.ch"},license:{name:"GPL-3.0",url:"https://www.gnu.org/licenses/gpl-3.0.en.html"},version:"1.0.1"},postman:{name:"create_transactions",description:{content:"Create new transaction/s, which will be submitted to the Mempool nodes for inclusion into a new block. This call assumes a full transaction as part of the request body, which might make raw calls difficult to manage. For convenience, it may be best to use an AIBlock library or SDK that abstracts this call for you.",type:"text/plain"},url:{path:["create_transactions"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{disabled:!1,description:{content:"(Required) An idempotent key for retrieving cached responses from the node",type:"text/plain"},key:"x-cache-id",value:""},{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs/api/mempool/mempool-api",custom_edit_url:null,hide_send_button:!0},sidebar:"apiSidebar",previous:{title:"transaction",permalink:"/docs/api/mempool/transaction"},next:{title:"create_item_asset",permalink:"/docs/api/mempool/create-item-asset"}},h={},g=[{value:"create_transactions",id:"create_transactions",level:2}],b={toc:g},f="wrapper";function x(e){let{components:t,...a}=e;return(0,i.yg)(f,(0,s.A)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"create_transactions"},"create_transactions"),(0,i.yg)("p",null,"Create new transaction/s, which will be submitted to the Mempool nodes for inclusion into a new block. This call assumes a full transaction as part of the request body, which might make raw calls difficult to manage. For convenience, it may be best to use an AIBlock library or SDK that abstracts this call for you."),(0,i.yg)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,i.yg)("summary",{style:{}},(0,i.yg)("strong",null,"Header Parameters")),(0,i.yg)("div",null,(0,i.yg)("ul",null,(0,i.yg)(r.A,{className:"paramsItem",param:{in:"header",name:"x-cache-id",required:!0,description:"An idempotent key for retrieving cached responses from the node",schema:{type:"string",example:"4d1e5754af0931a15138445c3ecd1a82",pattern:"^[a-z0-9]{32}$"}},mdxType:"ParamsItem"})))),(0,i.yg)(o.A,{mdxType:"MimeTabs"},(0,i.yg)(p.A,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,i.yg)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.yg)("summary",{style:{textAlign:"left"}},(0,i.yg)("strong",null,"Request Body"),(0,i.yg)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,i.yg)("div",{style:{textAlign:"left",marginLeft:"1rem"}},(0,i.yg)("div",{style:{marginTop:"1rem",marginBottom:"1rem"}},(0,i.yg)("p",null,"Create a new transaction"))),(0,i.yg)("ul",{style:{marginLeft:"1rem"}},(0,i.yg)(l.A,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.yg)("details",{style:{}},(0,i.yg)("summary",{style:{}},(0,i.yg)("strong",null,"inputs"),(0,i.yg)("span",{style:{opacity:"0.6"}}," txinput[]")),(0,i.yg)("div",{style:{marginLeft:"1rem"}},(0,i.yg)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.yg)("p",null,"The inputs to the transaction")),(0,i.yg)("li",null,(0,i.yg)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,i.yg)(l.A,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.yg)("details",{style:{}},(0,i.yg)("summary",{style:{}},(0,i.yg)("strong",null,"previous_out"),(0,i.yg)("span",{style:{opacity:"0.6"}}," object")),(0,i.yg)("div",{style:{marginLeft:"1rem"}},(0,i.yg)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.yg)("p",null,"Previous output tx hash")),(0,i.yg)(l.A,{collapsible:!1,name:"t_hash",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"f0698b112da09",description:"Transaction hash"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"n",required:!1,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",example:1,description:"."},mdxType:"SchemaItem"})))),(0,i.yg)(l.A,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.yg)("details",{style:{}},(0,i.yg)("summary",{style:{}},(0,i.yg)("strong",null,"script_signature"),(0,i.yg)("span",{style:{opacity:"0.6"}}," object")),(0,i.yg)("div",{style:{marginLeft:"1rem"}},(0,i.yg)(l.A,{collapsible:!1,name:"signable_data",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"1b061ff7e94765f95a2a5122d3bde757f2daaacef762c5aef2bf237ca3da2abf"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"signature",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"b576d3f5c1703206bad8b9de0ce3a3167e203b78164c86d78774534c930a535a31c49adae9e70569008c0329fb4a9128ca96d350f47a88ce06ef5a334506f803"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"public_key",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"5e7856117f404562c47dbdccfb8c23dc9ec69be14df5712bb459eeb440f40808"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"address_version",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"null"},mdxType:"SchemaItem"})))),(0,i.yg)("li",null,(0,i.yg)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,i.yg)(l.A,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.yg)("details",{style:{}},(0,i.yg)("summary",{style:{}},(0,i.yg)("strong",null,"outputs"),(0,i.yg)("span",{style:{opacity:"0.6"}}," txinput[]")),(0,i.yg)("div",{style:{marginLeft:"1rem"}},(0,i.yg)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.yg)("p",null,"The outputs to the transaction")),(0,i.yg)("li",null,(0,i.yg)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,i.yg)(l.A,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.yg)("details",{style:{}},(0,i.yg)("summary",{style:{}},(0,i.yg)("strong",null,"value"),(0,i.yg)("span",{style:{opacity:"0.6"}}," object")),(0,i.yg)("div",{style:{marginLeft:"1rem"}},(0,i.yg)(l.A,{collapsible:!1,name:"Token",required:!1,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",example:10,description:"Token amount"},mdxType:"SchemaItem"})))),(0,i.yg)(l.A,{collapsible:!1,name:"locktime",required:!1,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",example:0},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"drs_block_hash",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"null",description:"block hash DRS identifier"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"script_public_key",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"ec66c99201a7a8299e5acace235b03932c7990cc479eca35ee1dd692a5d3c030"},mdxType:"SchemaItem"}),(0,i.yg)("li",null,(0,i.yg)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,i.yg)(l.A,{collapsible:!1,name:"version",required:!1,schemaName:"int8",qualifierMessage:void 0,schema:{type:"integer",format:"int8",example:2,description:"The transaction's schema version"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.yg)("details",{style:{}},(0,i.yg)("summary",{style:{}},(0,i.yg)("strong",null,"druid_info"),(0,i.yg)("span",{style:{opacity:"0.6"}}," object")),(0,i.yg)("div",{style:{marginLeft:"1rem"}},(0,i.yg)(l.A,{collapsible:!1,name:"druid",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"DRUID_1"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"participants",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:2},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.yg)("details",{style:{}},(0,i.yg)("summary",{style:{}},(0,i.yg)("strong",null,"expectations"),(0,i.yg)("span",{style:{opacity:"0.6"}}," object")),(0,i.yg)("div",{style:{marginLeft:"1rem"}},(0,i.yg)(l.A,{collapsible:!1,name:"from",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"to",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"asset",required:!1,schemaName:"object",qualifierMessage:void 0,schema:{type:"object"},mdxType:"SchemaItem"}))))))))))),(0,i.yg)("div",null,(0,i.yg)(n.A,{mdxType:"ApiTabs"},(0,i.yg)(p.A,{label:"200",value:"200",mdxType:"TabItem"},(0,i.yg)("div",null,(0,i.yg)("p",null,"Successful operation")),(0,i.yg)("div",null,(0,i.yg)(o.A,{schemaType:"response",mdxType:"MimeTabs"},(0,i.yg)(p.A,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.yg)(m.A,{mdxType:"SchemaTabs"},(0,i.yg)(p.A,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.yg)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.yg)("summary",{style:{textAlign:"left"}},(0,i.yg)("strong",null,"Schema")),(0,i.yg)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.yg)("ul",{style:{marginLeft:"1rem"}},(0,i.yg)(l.A,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"a1d46199e5c89b00509e118f5af83172",description:"The ID of the call, which corresponds to the x-cache-id used in the header"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Success",description:'The status of the call, which will be one of either "Success", "Error", or "Pending"'},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Transaction/s successfully created",description:"The reason for the status of the call. Most useful to debug errors"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"route",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"create_transactions",description:"The endpoint route that was called"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.yg)("details",{style:{}},(0,i.yg)("summary",{style:{}},(0,i.yg)("strong",null,"content"),(0,i.yg)("span",{style:{opacity:"0.6"}}," object")),(0,i.yg)("div",{style:{marginLeft:"1rem"}},(0,i.yg)(l.A,{collapsible:!1,name:"transaction",required:!1,schemaName:"object",qualifierMessage:void 0,schema:{type:"object",example:"This section is unfinished, refer to postman collection for more details",description:"This section is unfinished, refer to postman collection for more details"},mdxType:"SchemaItem"}))))))),(0,i.yg)(p.A,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.yg)(c.A,{responseExample:'{\n  "id": "a1d46199e5c89b00509e118f5af83172",\n  "status": "Success",\n  "reason": "Transaction/s successfully created",\n  "route": "create_transactions",\n  "content": {\n    "transaction": "This section is unfinished, refer to postman collection for more details"\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,i.yg)(p.A,{label:"400",value:"400",mdxType:"TabItem"},(0,i.yg)("div",null,(0,i.yg)("p",null,"Invalid input")),(0,i.yg)("div",null,(0,i.yg)(o.A,{schemaType:"response",mdxType:"MimeTabs"},(0,i.yg)(p.A,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.yg)(m.A,{mdxType:"SchemaTabs"},(0,i.yg)(p.A,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.yg)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.yg)("summary",{style:{textAlign:"left"}},(0,i.yg)("strong",null,"Schema")),(0,i.yg)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.yg)("ul",{style:{marginLeft:"1rem"}},(0,i.yg)(l.A,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:null},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Error"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Bad Request"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"route",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:null},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"content",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:null},mdxType:"SchemaItem"})))),(0,i.yg)(p.A,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.yg)(c.A,{responseExample:'{\n  "id": null,\n  "status": "Error",\n  "reason": "Bad Request",\n  "route": null,\n  "content": null\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}x.isMDXComponent=!0}}]);