"use strict";(self.webpackChunkaiblock_dev=self.webpackChunkaiblock_dev||[]).push([[7170],{26319:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>y,contentTitle:()=>h,default:()=>_,frontMatter:()=>m,metadata:()=>u,toc:()=>g});var i=a(58168),n=(a(96540),a(15680)),s=a(54754),o=a(34366),r=a(13185),c=a(26612),d=a(30774),l=a(47335),p=(a(38454),a(19365));const m={id:"debug-data",title:"debug_data",description:"Get general information about the current node.",sidebar_label:"debug_data",hide_title:!0,hide_table_of_contents:!0,api:{tags:["info"],description:"Get general information about the current node.",operationId:"debugData",parameters:[{in:"header",name:"x-cache-id",required:!0,description:"An idempotent key for retrieving cached responses from the node",schema:{type:"string",example:"fde57c5d0e0c49f8a9e91ba5acc18cfd",pattern:"^[a-z0-9]{32}$"}}],responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:"fde57c5d0e0c49f8a9e91ba5acc18cfd",description:"The ID of the call, which corresponds to the x-cache-id used in the header"},status:{type:"string",example:"Success",description:'The status of the call, which will be one of either "Success", "Error", or "Pending"'},reason:{type:"string",example:"Debug data successfully retrieved",description:"The reason for the status of the call. Most useful to debug errors"},route:{type:"string",example:"debug_data",description:"The endpoint route that was called"},content:{type:"object",properties:{node_type:{type:"string",example:"Compute",description:"The type of this node"},node_api:{type:"array",description:"The publicly visible endpoints available on this node",items:{type:"string"},example:["fetch_balance","create_item_asset","create_transactions"]},node_peers:{type:"array",description:"The publicly visible nodes that this node is connected to",items:{type:"string"},example:["Storage"]},routes_pow:{type:"object",properties:{create_transactions:{type:"number",example:2}}}}}},title:"ResponseDebugData"}}}}},method:"get",path:"/debug_data",servers:[{url:"http://37.27.23.104:3000",description:"Testnet Miner Node"}],info:{title:"Miner API",description:"\u26a0\ufe0f **Some sections may still be incomplete. We higly recommend getting started by downloading our [Postman collection](/docs/postman-collections)**.\n\nThe Miner node is most like the Bitcoin miner you may be familiar with. They are responsible for mining new blocks that they receive from the Mempool nodes and collect the associated block reward for their efforts. They are only able to mine a block if they manage to get into the partition for that round.",contact:{email:"byron.houwens@a-block.ch"},license:{name:"GPL-3.0",url:"https://www.gnu.org/licenses/gpl-3.0.en.html"},version:"1.0.1"},postman:{name:"debug_data",description:{content:"Get general information about the current node.",type:"text/plain"},url:{path:["debug_data"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{disabled:!1,description:{content:"(Required) An idempotent key for retrieving cached responses from the node",type:"text/plain"},key:"x-cache-id",value:""},{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/api/miner/miner-api",custom_edit_url:null,hide_send_button:!0},h=void 0,u={unversionedId:"api/miner/debug-data",id:"api/miner/debug-data",title:"debug_data",description:"Get general information about the current node.",source:"@site/docs/api/miner/debug-data.api.mdx",sourceDirName:"api/miner",slug:"/api/miner/debug-data",permalink:"/docs/api/miner/debug-data",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"debug-data",title:"debug_data",description:"Get general information about the current node.",sidebar_label:"debug_data",hide_title:!0,hide_table_of_contents:!0,api:{tags:["info"],description:"Get general information about the current node.",operationId:"debugData",parameters:[{in:"header",name:"x-cache-id",required:!0,description:"An idempotent key for retrieving cached responses from the node",schema:{type:"string",example:"fde57c5d0e0c49f8a9e91ba5acc18cfd",pattern:"^[a-z0-9]{32}$"}}],responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:"fde57c5d0e0c49f8a9e91ba5acc18cfd",description:"The ID of the call, which corresponds to the x-cache-id used in the header"},status:{type:"string",example:"Success",description:'The status of the call, which will be one of either "Success", "Error", or "Pending"'},reason:{type:"string",example:"Debug data successfully retrieved",description:"The reason for the status of the call. Most useful to debug errors"},route:{type:"string",example:"debug_data",description:"The endpoint route that was called"},content:{type:"object",properties:{node_type:{type:"string",example:"Compute",description:"The type of this node"},node_api:{type:"array",description:"The publicly visible endpoints available on this node",items:{type:"string"},example:["fetch_balance","create_item_asset","create_transactions"]},node_peers:{type:"array",description:"The publicly visible nodes that this node is connected to",items:{type:"string"},example:["Storage"]},routes_pow:{type:"object",properties:{create_transactions:{type:"number",example:2}}}}}},title:"ResponseDebugData"}}}}},method:"get",path:"/debug_data",servers:[{url:"http://37.27.23.104:3000",description:"Testnet Miner Node"}],info:{title:"Miner API",description:"\u26a0\ufe0f **Some sections may still be incomplete. We higly recommend getting started by downloading our [Postman collection](/docs/postman-collections)**.\n\nThe Miner node is most like the Bitcoin miner you may be familiar with. They are responsible for mining new blocks that they receive from the Mempool nodes and collect the associated block reward for their efforts. They are only able to mine a block if they manage to get into the partition for that round.",contact:{email:"byron.houwens@a-block.ch"},license:{name:"GPL-3.0",url:"https://www.gnu.org/licenses/gpl-3.0.en.html"},version:"1.0.1"},postman:{name:"debug_data",description:{content:"Get general information about the current node.",type:"text/plain"},url:{path:["debug_data"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{disabled:!1,description:{content:"(Required) An idempotent key for retrieving cached responses from the node",type:"text/plain"},key:"x-cache-id",value:""},{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/api/miner/miner-api",custom_edit_url:null,hide_send_button:!0},sidebar:"apiSidebar",previous:{title:"info",permalink:"/docs/api/miner/info"},next:{title:"Postman Collections",permalink:"/docs/postman-collections"}},y={},g=[{value:"debug_data",id:"debug_data",level:2}],b={toc:g},f="wrapper";function _(e){let{components:t,...a}=e;return(0,n.yg)(f,(0,i.A)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h2",{id:"debug_data"},"debug_data"),(0,n.yg)("p",null,"Get general information about the current node."),(0,n.yg)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,n.yg)("summary",{style:{}},(0,n.yg)("strong",null,"Header Parameters")),(0,n.yg)("div",null,(0,n.yg)("ul",null,(0,n.yg)(r.A,{className:"paramsItem",param:{in:"header",name:"x-cache-id",required:!0,description:"An idempotent key for retrieving cached responses from the node",schema:{type:"string",example:"fde57c5d0e0c49f8a9e91ba5acc18cfd",pattern:"^[a-z0-9]{32}$"}},mdxType:"ParamsItem"})))),(0,n.yg)("div",null,(0,n.yg)(s.A,{mdxType:"ApiTabs"},(0,n.yg)(p.A,{label:"200",value:"200",mdxType:"TabItem"},(0,n.yg)("div",null,(0,n.yg)("p",null,"Successful operation")),(0,n.yg)("div",null,(0,n.yg)(o.A,{schemaType:"response",mdxType:"MimeTabs"},(0,n.yg)(p.A,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,n.yg)(l.A,{mdxType:"SchemaTabs"},(0,n.yg)(p.A,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,n.yg)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.yg)("summary",{style:{textAlign:"left"}},(0,n.yg)("strong",null,"Schema")),(0,n.yg)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.yg)("ul",{style:{marginLeft:"1rem"}},(0,n.yg)(d.A,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"fde57c5d0e0c49f8a9e91ba5acc18cfd",description:"The ID of the call, which corresponds to the x-cache-id used in the header"},mdxType:"SchemaItem"}),(0,n.yg)(d.A,{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Success",description:'The status of the call, which will be one of either "Success", "Error", or "Pending"'},mdxType:"SchemaItem"}),(0,n.yg)(d.A,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Debug data successfully retrieved",description:"The reason for the status of the call. Most useful to debug errors"},mdxType:"SchemaItem"}),(0,n.yg)(d.A,{collapsible:!1,name:"route",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"debug_data",description:"The endpoint route that was called"},mdxType:"SchemaItem"}),(0,n.yg)(d.A,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,n.yg)("details",{style:{}},(0,n.yg)("summary",{style:{}},(0,n.yg)("strong",null,"content"),(0,n.yg)("span",{style:{opacity:"0.6"}}," object")),(0,n.yg)("div",{style:{marginLeft:"1rem"}},(0,n.yg)(d.A,{collapsible:!1,name:"node_type",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Compute",description:"The type of this node"},mdxType:"SchemaItem"}),(0,n.yg)(d.A,{collapsible:!1,name:"node_api",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",description:"The publicly visible endpoints available on this node",items:{type:"string"},example:["fetch_balance","create_item_asset","create_transactions"]},mdxType:"SchemaItem"}),(0,n.yg)(d.A,{collapsible:!1,name:"node_peers",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",description:"The publicly visible nodes that this node is connected to",items:{type:"string"},example:["Storage"]},mdxType:"SchemaItem"}),(0,n.yg)(d.A,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,n.yg)("details",{style:{}},(0,n.yg)("summary",{style:{}},(0,n.yg)("strong",null,"routes_pow"),(0,n.yg)("span",{style:{opacity:"0.6"}}," object")),(0,n.yg)("div",{style:{marginLeft:"1rem"}},(0,n.yg)(d.A,{collapsible:!1,name:"create_transactions",required:!1,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",example:2},mdxType:"SchemaItem"})))))))))),(0,n.yg)(p.A,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,n.yg)(c.A,{responseExample:'{\n  "id": "fde57c5d0e0c49f8a9e91ba5acc18cfd",\n  "status": "Success",\n  "reason": "Debug data successfully retrieved",\n  "route": "debug_data",\n  "content": {\n    "node_type": "Compute",\n    "node_api": [\n      "fetch_balance",\n      "create_item_asset",\n      "create_transactions"\n    ],\n    "node_peers": [\n      "Storage"\n    ],\n    "routes_pow": {\n      "create_transactions": 2\n    }\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}_.isMDXComponent=!0}}]);