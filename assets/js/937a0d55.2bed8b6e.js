"use strict";(self.webpackChunkaiblock_dev=self.webpackChunkaiblock_dev||[]).push([[6737],{47256:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>y,contentTitle:()=>u,default:()=>x,frontMatter:()=>m,metadata:()=>h,toc:()=>g});var i=t(58168),o=(t(96540),t(15680)),a=t(54754),n=t(34366),l=t(13185),p=t(26612),r=t(30774),d=t(47335),c=(t(38454),t(19365));const m={id:"issued-supply",title:"issued",description:"Get issued supply information.",sidebar_label:"issued",hide_title:!0,hide_table_of_contents:!0,api:{tags:["info"],description:"Get issued supply information.",operationId:"issuedSupply",parameters:[{in:"header",name:"x-cache-id",required:!0,description:"An idempotent key for retrieving cached responses from the node.",schema:{type:"string",example:"4d1e5754af0931a15138445c3ecd1a82",pattern:"^[a-z0-9]{32}$"}}],responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:"4d1e5754af0931a15138445c3ecd1a82",description:"The ID of the call, which corresponds to the x-cache-id used in the header"},status:{type:"string",example:"Success",description:'The status of the call, which will be one of either "Success", "Error", or "Pending"'},reason:{type:"string",example:"Successfully fetched issued supply",description:"The reason for the status of the call. Most useful to debug errors"},route:{type:"string",example:"issued_supply",description:"The endpoint route that was called"},content:{type:"number",example:94028360708339,description:"The total supply of tokens"}},title:"ResponseIssuedSupply"}}}}},method:"get",path:"/issued_supply",servers:[{url:"http://37.27.23.104:3003",description:"Testnet Mempool Node"}],info:{title:"Mempool API",description:"\u26a0\ufe0f **Some sections may still be incomplete. We higly recommend getting started by downloading our [Postman collection](/docs/postman-collections)**.\n\nThe Mempool node is a special type of node responsible for collecting transactions and bundling them into new blocks. \nThey also partition the mining network for mining and validate the blocks that these partitions mine. \nThere are only a limited number of Mempool nodes.  ",contact:{email:"byron.houwens@a-block.ch"},license:{name:"GPL-3.0",url:"https://www.gnu.org/licenses/gpl-3.0.en.html"},version:"1.0.1"},postman:{name:"issued",description:{content:"Get issued supply information.",type:"text/plain"},url:{path:["issued_supply"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{disabled:!1,description:{content:"(Required) An idempotent key for retrieving cached responses from the node.",type:"text/plain"},key:"x-cache-id",value:""},{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/api/mempool/mempool-api",custom_edit_url:null,hide_send_button:!0},u=void 0,h={unversionedId:"api/mempool/issued-supply",id:"api/mempool/issued-supply",title:"issued",description:"Get issued supply information.",source:"@site/docs/api/mempool/issued-supply.api.mdx",sourceDirName:"api/mempool",slug:"/api/mempool/issued-supply",permalink:"/docs/api/mempool/issued-supply",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"issued-supply",title:"issued",description:"Get issued supply information.",sidebar_label:"issued",hide_title:!0,hide_table_of_contents:!0,api:{tags:["info"],description:"Get issued supply information.",operationId:"issuedSupply",parameters:[{in:"header",name:"x-cache-id",required:!0,description:"An idempotent key for retrieving cached responses from the node.",schema:{type:"string",example:"4d1e5754af0931a15138445c3ecd1a82",pattern:"^[a-z0-9]{32}$"}}],responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:"4d1e5754af0931a15138445c3ecd1a82",description:"The ID of the call, which corresponds to the x-cache-id used in the header"},status:{type:"string",example:"Success",description:'The status of the call, which will be one of either "Success", "Error", or "Pending"'},reason:{type:"string",example:"Successfully fetched issued supply",description:"The reason for the status of the call. Most useful to debug errors"},route:{type:"string",example:"issued_supply",description:"The endpoint route that was called"},content:{type:"number",example:94028360708339,description:"The total supply of tokens"}},title:"ResponseIssuedSupply"}}}}},method:"get",path:"/issued_supply",servers:[{url:"http://37.27.23.104:3003",description:"Testnet Mempool Node"}],info:{title:"Mempool API",description:"\u26a0\ufe0f **Some sections may still be incomplete. We higly recommend getting started by downloading our [Postman collection](/docs/postman-collections)**.\n\nThe Mempool node is a special type of node responsible for collecting transactions and bundling them into new blocks. \nThey also partition the mining network for mining and validate the blocks that these partitions mine. \nThere are only a limited number of Mempool nodes.  ",contact:{email:"byron.houwens@a-block.ch"},license:{name:"GPL-3.0",url:"https://www.gnu.org/licenses/gpl-3.0.en.html"},version:"1.0.1"},postman:{name:"issued",description:{content:"Get issued supply information.",type:"text/plain"},url:{path:["issued_supply"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{disabled:!1,description:{content:"(Required) An idempotent key for retrieving cached responses from the node.",type:"text/plain"},key:"x-cache-id",value:""},{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/api/mempool/mempool-api",custom_edit_url:null,hide_send_button:!0},sidebar:"apiSidebar",previous:{title:"total_supply",permalink:"/docs/api/mempool/total-supply"},next:{title:"transaction",permalink:"/docs/api/mempool/transaction"}},y={},g=[{value:"issued",id:"issued",level:2}],f={toc:g},b="wrapper";function x(e){let{components:s,...t}=e;return(0,o.yg)(b,(0,i.A)({},f,t,{components:s,mdxType:"MDXLayout"}),(0,o.yg)("h2",{id:"issued"},"issued"),(0,o.yg)("p",null,"Get issued supply information."),(0,o.yg)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,o.yg)("summary",{style:{}},(0,o.yg)("strong",null,"Header Parameters")),(0,o.yg)("div",null,(0,o.yg)("ul",null,(0,o.yg)(l.A,{className:"paramsItem",param:{in:"header",name:"x-cache-id",required:!0,description:"An idempotent key for retrieving cached responses from the node.",schema:{type:"string",example:"4d1e5754af0931a15138445c3ecd1a82",pattern:"^[a-z0-9]{32}$"}},mdxType:"ParamsItem"})))),(0,o.yg)("div",null,(0,o.yg)(a.A,{mdxType:"ApiTabs"},(0,o.yg)(c.A,{label:"200",value:"200",mdxType:"TabItem"},(0,o.yg)("div",null,(0,o.yg)("p",null,"Successful operation")),(0,o.yg)("div",null,(0,o.yg)(n.A,{schemaType:"response",mdxType:"MimeTabs"},(0,o.yg)(c.A,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,o.yg)(d.A,{mdxType:"SchemaTabs"},(0,o.yg)(c.A,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,o.yg)("details",{style:{},"data-collapsed":!1,open:!0},(0,o.yg)("summary",{style:{textAlign:"left"}},(0,o.yg)("strong",null,"Schema")),(0,o.yg)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,o.yg)("ul",{style:{marginLeft:"1rem"}},(0,o.yg)(r.A,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"4d1e5754af0931a15138445c3ecd1a82",description:"The ID of the call, which corresponds to the x-cache-id used in the header"},mdxType:"SchemaItem"}),(0,o.yg)(r.A,{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Success",description:'The status of the call, which will be one of either "Success", "Error", or "Pending"'},mdxType:"SchemaItem"}),(0,o.yg)(r.A,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Successfully fetched issued supply",description:"The reason for the status of the call. Most useful to debug errors"},mdxType:"SchemaItem"}),(0,o.yg)(r.A,{collapsible:!1,name:"route",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"issued_supply",description:"The endpoint route that was called"},mdxType:"SchemaItem"}),(0,o.yg)(r.A,{collapsible:!1,name:"content",required:!1,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",example:94028360708339,description:"The total supply of tokens"},mdxType:"SchemaItem"})))),(0,o.yg)(c.A,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,o.yg)(p.A,{responseExample:'{\n  "id": "4d1e5754af0931a15138445c3ecd1a82",\n  "status": "Success",\n  "reason": "Successfully fetched issued supply",\n  "route": "issued_supply",\n  "content": 94028360708339\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}x.isMDXComponent=!0}}]);