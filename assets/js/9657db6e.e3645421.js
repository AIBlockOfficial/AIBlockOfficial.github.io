"use strict";(self.webpackChunkaiblock_dev=self.webpackChunkaiblock_dev||[]).push([[9479],{64203:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>u,default:()=>_,frontMatter:()=>m,metadata:()=>h,toc:()=>y});var n=a(58168),i=(a(96540),a(15680)),o=a(54754),s=a(34366),r=a(13185),d=a(26612),l=a(30774),p=a(47335),c=(a(38454),a(19365));const m={id:"debug-data",title:"debug_data",description:"Get general information about the current node.",sidebar_label:"debug_data",hide_title:!0,hide_table_of_contents:!0,api:{tags:["info"],description:"Get general information about the current node.",operationId:"debugData",parameters:[{in:"header",name:"x-cache-id",required:!0,description:"An idempotent key for retrieving cached responses from the node.",schema:{type:"string",example:"4d1e5754af0931a15138445c3ecd1a82",pattern:"^[a-z0-9]{32}$"}}],responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:"4d1e5754af0931a15138445c3ecd1a82",description:"The ID of the call, which corresponds to the x-cache-id used in the header"},status:{type:"string",example:"Success",description:'The status of the call, which will be one of either "Success", "Error", or "Pending"'},reason:{type:"string",example:"Debug data successfully retrieved",description:"The reason for the status of the call. Most useful to debug errors"},route:{type:"string",example:"debug_data",description:"The endpoint route that was called"},content:{type:"object",properties:{node_type:{type:"string",example:"Compute",description:"The type of this node"},node_api:{type:"array",description:"The publicly visible endpoints available on this node",items:{type:"string"},example:["fetch_balance","create_item_asset","create_transactions"]},node_peers:{type:"array",description:"The publicly visible nodes that this node is connected to",items:{type:"string"},example:["Storage"]}}}},title:"ResponseDebugData"}}}}},method:"get",path:"/debug_data",servers:[{url:"http://49.12.234.10:3003",description:"Testnet Mempool Node"}],info:{title:"Mempool API",description:"The Mempool node is a special type of node responsible for collecting transactions and bundling them into new blocks. \nThey also partition the mining network for mining and validate the blocks that these partitions mine. \nThere are only a limited number of Mempool nodes.  ",contact:{email:"byron.houwens@a-block.net"},license:{name:"GPL-3.0",url:"https://www.gnu.org/licenses/gpl-3.0.en.html"},version:"1.0.0"},postman:{name:"debug_data",description:{content:"Get general information about the current node.",type:"text/plain"},url:{path:["debug_data"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{disabled:!1,description:{content:"(Required) An idempotent key for retrieving cached responses from the node.",type:"text/plain"},key:"x-cache-id",value:""},{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/api/mempool/mempool-api",custom_edit_url:null,hide_send_button:!0},u=void 0,h={unversionedId:"api/mempool/debug-data",id:"api/mempool/debug-data",title:"debug_data",description:"Get general information about the current node.",source:"@site/docs/api/mempool/debug-data.api.mdx",sourceDirName:"api/mempool",slug:"/api/mempool/debug-data",permalink:"/docs/api/mempool/debug-data",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"debug-data",title:"debug_data",description:"Get general information about the current node.",sidebar_label:"debug_data",hide_title:!0,hide_table_of_contents:!0,api:{tags:["info"],description:"Get general information about the current node.",operationId:"debugData",parameters:[{in:"header",name:"x-cache-id",required:!0,description:"An idempotent key for retrieving cached responses from the node.",schema:{type:"string",example:"4d1e5754af0931a15138445c3ecd1a82",pattern:"^[a-z0-9]{32}$"}}],responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:"4d1e5754af0931a15138445c3ecd1a82",description:"The ID of the call, which corresponds to the x-cache-id used in the header"},status:{type:"string",example:"Success",description:'The status of the call, which will be one of either "Success", "Error", or "Pending"'},reason:{type:"string",example:"Debug data successfully retrieved",description:"The reason for the status of the call. Most useful to debug errors"},route:{type:"string",example:"debug_data",description:"The endpoint route that was called"},content:{type:"object",properties:{node_type:{type:"string",example:"Compute",description:"The type of this node"},node_api:{type:"array",description:"The publicly visible endpoints available on this node",items:{type:"string"},example:["fetch_balance","create_item_asset","create_transactions"]},node_peers:{type:"array",description:"The publicly visible nodes that this node is connected to",items:{type:"string"},example:["Storage"]}}}},title:"ResponseDebugData"}}}}},method:"get",path:"/debug_data",servers:[{url:"http://49.12.234.10:3003",description:"Testnet Mempool Node"}],info:{title:"Mempool API",description:"The Mempool node is a special type of node responsible for collecting transactions and bundling them into new blocks. \nThey also partition the mining network for mining and validate the blocks that these partitions mine. \nThere are only a limited number of Mempool nodes.  ",contact:{email:"byron.houwens@a-block.net"},license:{name:"GPL-3.0",url:"https://www.gnu.org/licenses/gpl-3.0.en.html"},version:"1.0.0"},postman:{name:"debug_data",description:{content:"Get general information about the current node.",type:"text/plain"},url:{path:["debug_data"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{disabled:!1,description:{content:"(Required) An idempotent key for retrieving cached responses from the node.",type:"text/plain"},key:"x-cache-id",value:""},{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/api/mempool/mempool-api",custom_edit_url:null,hide_send_button:!0},sidebar:"apiSidebar",previous:{title:"info",permalink:"/docs/api/mempool/info"},next:{title:"transaction",permalink:"/docs/api/mempool/transaction"}},g={},y=[{value:"debug_data",id:"debug_data",level:2}],b={toc:y},f="wrapper";function _(e){let{components:t,...a}=e;return(0,i.yg)(f,(0,n.A)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"debug_data"},"debug_data"),(0,i.yg)("p",null,"Get general information about the current node."),(0,i.yg)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,i.yg)("summary",{style:{}},(0,i.yg)("strong",null,"Header Parameters")),(0,i.yg)("div",null,(0,i.yg)("ul",null,(0,i.yg)(r.A,{className:"paramsItem",param:{in:"header",name:"x-cache-id",required:!0,description:"An idempotent key for retrieving cached responses from the node.",schema:{type:"string",example:"4d1e5754af0931a15138445c3ecd1a82",pattern:"^[a-z0-9]{32}$"}},mdxType:"ParamsItem"})))),(0,i.yg)("div",null,(0,i.yg)(o.A,{mdxType:"ApiTabs"},(0,i.yg)(c.A,{label:"200",value:"200",mdxType:"TabItem"},(0,i.yg)("div",null,(0,i.yg)("p",null,"Successful operation")),(0,i.yg)("div",null,(0,i.yg)(s.A,{schemaType:"response",mdxType:"MimeTabs"},(0,i.yg)(c.A,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.yg)(p.A,{mdxType:"SchemaTabs"},(0,i.yg)(c.A,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.yg)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.yg)("summary",{style:{textAlign:"left"}},(0,i.yg)("strong",null,"Schema")),(0,i.yg)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.yg)("ul",{style:{marginLeft:"1rem"}},(0,i.yg)(l.A,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"4d1e5754af0931a15138445c3ecd1a82",description:"The ID of the call, which corresponds to the x-cache-id used in the header"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Success",description:'The status of the call, which will be one of either "Success", "Error", or "Pending"'},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Debug data successfully retrieved",description:"The reason for the status of the call. Most useful to debug errors"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"route",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"debug_data",description:"The endpoint route that was called"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.yg)("details",{style:{}},(0,i.yg)("summary",{style:{}},(0,i.yg)("strong",null,"content"),(0,i.yg)("span",{style:{opacity:"0.6"}}," object")),(0,i.yg)("div",{style:{marginLeft:"1rem"}},(0,i.yg)(l.A,{collapsible:!1,name:"node_type",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Compute",description:"The type of this node"},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"node_api",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",description:"The publicly visible endpoints available on this node",items:{type:"string"},example:["fetch_balance","create_item_asset","create_transactions"]},mdxType:"SchemaItem"}),(0,i.yg)(l.A,{collapsible:!1,name:"node_peers",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",description:"The publicly visible nodes that this node is connected to",items:{type:"string"},example:["Storage"]},mdxType:"SchemaItem"}))))))),(0,i.yg)(c.A,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.yg)(d.A,{responseExample:'{\n  "id": "4d1e5754af0931a15138445c3ecd1a82",\n  "status": "Success",\n  "reason": "Debug data successfully retrieved",\n  "route": "debug_data",\n  "content": {\n    "node_type": "Compute",\n    "node_api": [\n      "fetch_balance",\n      "create_item_asset",\n      "create_transactions"\n    ],\n    "node_peers": [\n      "Storage"\n    ]\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}_.isMDXComponent=!0}}]);